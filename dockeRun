#!/bin/sh

# =================
# Author: PastLeo
# Email: chgu82837@gmail.com
# Date: 2014/12/27
# =================

binName="dockeRun"
dockerRunCmdPrefix="dockerRun:"
dockerRunLinkPrefix="dockerRunLink:"
dockerRunBin=$(readlink $0 || echo $(cd $(dirname $0) && pwd)/$(basename $0))
dockerRunHome=$(dirname $dockerRunBin)

# echo "dockerRunBin = $dockerRunBin"
# echo "dockerRunHome = $dockerRunHome"
# exit 0

case "$1" in
"--install")
    if [ $2 ]; then
        installDir="$2"
    else
        case "$PATH" in
        */usr/local/bin*)
            installDir="/usr/local/bin"
            ;;
        */usr/bin*)
            installDir="/usr/bin"
            ;;
        */bin*)
            installDir="/bin"
            ;;
        esac
    fi

    echo "installing $binName for the system ..."
    if [ -f $installDir/$binName ]; then
        echo "$installDir/$binName exists, removing ..."
        rm -f $installDir/$binName
    fi
    echo "linking the executable into $installDir ..."
    ln -s $dockerRunBin $installDir/$binName
    chmod ugo+x $dockerRunBin
    exit 0
    ;;
"--install-b2d")
    boot2dockerBootscript="/var/lib/boot2docker/bootlocal.sh"
    dockerAshrc="/home/docker/.ashrc"

    echo "installing $binName for boot2docker system"
    echo "building $boot2dockerBootscript ..."
    echo "#!/bin/sh" > $boot2dockerBootscript
    echo "" >> $boot2dockerBootscript
    echo "$dockerRunBin --install" >> $boot2dockerBootscript
    echo "" >> $boot2dockerBootscript

    if [ $2 ]; then
        echo "echo '' >> $dockerAshrc" >> $boot2dockerBootscript
        echo "echo \"$binName $2\" >> $dockerAshrc" >> $boot2dockerBootscript
        echo "echo '' >> $dockerAshrc" >> $boot2dockerBootscript
        echo "" >> $boot2dockerBootscript

        echo "" >> $dockerAshrc
        echo "$binName $2" >> $dockerAshrc
        echo "" >> $dockerAshrc
    fi

    echo "chmoding $boot2dockerBootscript ..."
    chmod ugo+x $boot2dockerBootscript
    echo "boot2dockerBootscript OK!"
    $0 "--install"
    exit 0
    ;;
"--rebuild")
    echo " === rebuilding mode === "
    rebuild_mod=1
    shift
    ;;
esac

if [ $# -lt 1 ]; then
    echo ""
    echo "$binName - dockerRunner exec by $0"
    echo "=============================="
    echo "A small docker client helper to run container with saved options in the Dockerfile"
    echo "=============================="
    echo "Usage:"
    echo "    $binName [-rebuild] <imageName_or_dockerPath> [command] [args...]"
    echo "    $binName --install [install-destination-dir] # install to normal unix system"
    echo "    $binName --install-b2d [default-dockeRun-imageName] # install to boot2docker system"
    echo ""
    exit 255
fi

dockerBin="$(which docker)"
if ! [ $dockerBin ]; then
    echo "This docker binary not found! Please install it to run this script!"
    exit 255
fi
# echo "dockerBin = $dockerBin"

case "$1" in
*/*)
    # echo "use argment 1 as dockerPath"
    imageName="$(basename $1)"
    dockerPath="$1"
    ;;
*)
    # echo "use argment 1 as imageName"
    imageName="$1"
    dockerPath="$dockerRunHome/$1"
    if [ -f $dockerPath ]; then
        dockerPath=$(cd $dockerRunHome/$(grep -E -m 1 "^ *$dockerRunLinkPrefix" $dockerPath | sed -E "s/^ *#? *$dockerRunLinkPrefix +//g" | sed -E "s/ +//g") && pwd)
    fi
    ;;
esac

# echo "imageName = $imageName"
# echo "dockerPath = $dockerPath"

if ! [ -f "$dockerPath/Dockerfile" ]; then
    echo ""
    echo "Error:"
    echo "$dockerPath does not contains a Dockerfile or not exist!"
    echo ""

    exit 255
fi

# echo "grep -E -m 1 \"^ *# *$dockerRunCmdPrefix\" $dockerPath/Dockerfile | sed -E \"s/^ *# *$dockerRunCmdPrefix +//g\" | sed -E \"s/[^ -~]+/ /g\""
runOpt=$(grep -E -m 1 "^ *# *$dockerRunCmdPrefix" $dockerPath/Dockerfile | sed -E "s/^ *# *$dockerRunCmdPrefix +//g" | sed -E "s/[^ -~]+/ /g")
# echo "runOpt = $runOpt"
# exit 0

# if ! [ "$runOpt" ]; then
#     echo ""
#     echo "Error:"
#     echo "The Dockerfile must contain a line with '# $dockerRunCmdPrefix [options]'!"
#     echo ""
#     exit 255
# fi

# echo "$dockerBin images $imageName | grep $imageName &> /dev/null"

if [ $rebuild_mod ]; then
    echo "removing image $imageName ..."
    $dockerBin rmi -f $imageName
fi

if [ ! "$($dockerBin images $imageName | grep $imageName 2> /dev/null)" ]; then
    echo "docker image $imageName not exist, building..."

    # echo "$dockerBin build -t $imageName $dockerPath"
    $dockerBin build -t $imageName $dockerPath

    if [ $? -ne 0 ]; then
        echo ""
        echo "It seems build failed, aborting..."
        echo ""
        exit 255
    fi
fi

runOpt=$(eval "echo $runOpt")
# echo "runOpt = $runOpt"

shift

echo "Starting to run docker..."
echo ">> $dockerBin run $runOpt $imageName $@"
$dockerBin run $runOpt $imageName $@
